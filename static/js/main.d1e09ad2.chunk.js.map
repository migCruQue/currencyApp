{"version":3,"sources":["layout_components/Header/Header.module.css","layout_components/Header/Header.js","converter_components/currency_input.js","converter_components/select_currency.js","App_Helpers.js","App.js","config.js","index.js","App.module.css"],"names":["module","exports","Header","className","style","logo","CurrencyInput","props","handleChange","bind","e","this","onAmountChange","target","value","name","type","amount","amount_input","placeholder","onChange","Component","SelectCurrency","onCurrencyChange","label","disabled","Helpers","rate","input","parseFloat","Number","isNaN","output","Math","round","toString","App","state","input_currency","output_currency","handleAmountChange","handleCurrencyChange","query","fetch","then","res","json","result","setState","quotes","fetchRate","prevProps","prevState","currency","setTimeout","console","log","outputAmount","app","to","amount_output","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1e09ad2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__1999H\"};","import React from 'react';\nimport style from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <header>\n            <div className={style.logo}></div>\n            <h1>CurrencyApp</h1>\n        </header>\n    );\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport style from '../App.module.css';\n\n\nclass CurrencyInput extends Component {\n\n    constructor(props) {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.props.onAmountChange(e.target.value);\n;    }\n\n    render() {\n        return (\n              <input \n                name=\"input_amount_value\" \n                type=\"text\"\n                // className=\"amount amount_input\"\n                className={`${style.amount} ${style.amount_input}`}\n                placeholder=\"Amount\" \n                value={this.props.value} \n                onChange={this.handleChange} /> \n        );\n    }\n}\n\nexport default CurrencyInput;","import React, { Component } from 'react';\n\nfunction displayOptions(type){\n    if(type === 'input'){\n    return (\n        <>\n        <option value=\"USD\">US Dollar</option>\n        <option disabled value=\"EUR\">Euro</option>\n        <option disabled value=\"GBP\">British Pound</option>\n        <option disabled value=\"CAD\">Canadian Dollar</option>\n        </>\n    )}\n    if(type === 'output'){\n    return (\n        <>\n        <option value=\"USD\">US Dollar</option>\n        <option value=\"EUR\">Euro</option>\n        <option value=\"GBP\">British Pound</option>\n        <option value=\"CAD\">Canadian Dollar</option>\n        </>\n    )}\n}\n    \n\nclass SelectCurrency extends Component {\n\n    constructor(props) {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.props.onCurrencyChange(e, this.props.name);\n    }\n\n    render() {\n        return (\n            <>\n                <label>\n                    <p>{this.props.label}</p>\n                    <select onChange={this.handleChange} value={this.props.value}>\n                        {displayOptions(this.props.type)}\n                    </select>\n                </label>\n            </>\n        );\n    }\n}\n\nexport default SelectCurrency;","\nexport const Helpers = {\n\n     convert: (amount,rate) => {        // * Function to check that the user enters a valid number and round it to 3 decimals.\n        const input = parseFloat(amount);\n        if(Number.isNaN(input)){\n        return '';}\n        const output = input * rate;\n        const rounded = Math.round(output * 1000) / 1000;\n        return rounded.toString();\n      }\n}","import React, {Component} from 'react';\nimport { currencylayer_URL_LIVE, currencylayer_API_key} from './config';                  // * variables used to form the query\n// * Components\nimport Header from './layout_components/Header/Header';\nimport CurrencyInput from './converter_components/currency_input';\nimport SelectCurrency from './converter_components/select_currency';\n// * Helpers\nimport { Helpers } from './App_Helpers'; \n// * Style\nimport style from './App.module.css';\n\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super();\n    this.state = {\n      amount: '',\n      input_currency: \"USD\",    // * 'USD' is the default value, the free account only allows to set up 'USD' to source in the query.\n      output_currency: \"GBP\",\n    };\n    this.handleAmountChange = this.handleAmountChange.bind(this);\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    }\n\n    \n    // * the query includes  (currencylayer_URL_LIVE, currencylayer_API_key) keys accoun from currencylayer.\n    // * plus (this.state.output_currency, this.state.input_currency) from state.\n    fetchRate(){       \n      const query = `${currencylayer_URL_LIVE}?access_key=${currencylayer_API_key}&currencies=${this.state.output_currency}&source=${this.state.input_currency}&format=1`\n      fetch(query)\n     .then(res => res.json())\n     .then(result => this.setState({rate: result.quotes[`${this.state.input_currency + this.state.output_currency}`]}));\n    }\n    \n    // * this method fetch the query with the default value when mounting\n    //todo:  it might be beneficial only fetch if the user enter a valid amount in the amount input field.\n    componentDidMount(){  \n      this.fetchRate();\n    }  \n\n    // * this method checks if the select_currency input has change, and if it has, it fetch the query with new params.\n    componentDidUpdate(prevProps, prevState) {   \n      if (this.state.output_currency !== prevState.output_currency) {\n        this.fetchRate();\n      }\n    }\n\n    handleAmountChange(amount){\n      this.setState({amount});\n    }\n\n    handleCurrencyChange(e, name){\n      const currency = e.target.value;\n      this.setState({[name]: currency});\n      setTimeout(() => {\n        this.fetchRate();\n      }, 500);\n    }\n\n    render(){\n      console.log(this.state);\n      const rate = this.state.rate;\n      const amount = this.state.amount;\n      const outputAmount =  Helpers.convert(amount,rate);\n      return(\n        <div className={style.app}>\n          <Header />\n          <main>\n            <div className=\"box_input\">\n              <form>\n                <SelectCurrency    // * Select input to choose FROM which currency to convert the amount of money \n                  name=\"input_currency\"\n                  value={this.state.input_currency}\n                  onCurrencyChange={this.handleCurrencyChange}\n                  type=\"input\"\n                  label=\"From\"\n                />     \n                <CurrencyInput        // * Input to enter the amount of money the user tries to convert\n                  value={this.state.amount}\n                  onAmountChange={this.handleAmountChange}\n                />\n              </form>\n            </div>\n\n            <div className={style.to}></div>\n\n            <div className=\"box_output\">\n              <form>                 \n                <SelectCurrency             // * Select input to chose TO which currency to convert the amount of money\n                  name=\"output_currency\"\n                  value={this.state.output_currency}\n                  onCurrencyChange={this.handleCurrencyChange}\n                  type=\"output\"\n                  label=\"To\"\n                /> \n                <div className={`${style.amount} ${style.amount_output}`}>{outputAmount}</div>  \n              </form>  \n            </div>\n          </main>\n        </div>\n      );\n    }\n    \n \n}\n\nexport default App;\n","\nconst currencylayer_API_key = '819b67e447a0b4f513f8ecafa24dbc29';\n\nconst currencylayer_URL_LIVE = 'http://apilayer.net/api/live';\n\nconst currencylayer_example_request = 'https://apilayer.net/api/live?access_key=819b67e447a0b4f513f8ecafa24dbc29&currencies=EUR,GBP,CAD,PLN&source=USD&format=1';\n\nexport {\n    currencylayer_API_key,\n    currencylayer_URL_LIVE,\n    currencylayer_example_request,\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"form\":\"App_form__30Y9M\",\"amount\":\"App_amount__2_JIL\",\"amount_input\":\"App_amount_input__3TjY4\",\"amount_output\":\"App_amount_output__1RS43\",\"to\":\"App_to__34Di-\"};"],"sourceRoot":""}